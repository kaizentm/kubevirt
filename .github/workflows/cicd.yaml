name: CICD Pipeline

on:
  push:
    branches: ["ise","eugene/*"]
    paths:
      - '**/workflows/**'
  workflow_dispatch:

env:
  DOCKER_PREFIX: ghcr.io/${{ github.repository }}
  DOCKER_TAG: ${{ vars.VERSION }}-l1vh.${{ github.run_number }}

  
jobs:
  quality-check:
    uses: ./.github/workflows/pr.yaml
    
  Build_Push_Images:
    runs-on: self-hosted
    needs: [quality-check]
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to GHCR
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: false



      - name: Build Images
        run: |
          make bazel-build-images

      - name: Push Images
        run: |
          make bazel-push-images
  
  # wake-up-vm:
  #   uses: ./.github/workflows/wake-up-vm.yaml
  #   with:
  #     environment: dev
  #   secrets: inherit
  #   needs: [Build_Push_Images]
  dev:
    uses: ./.github/workflows/deploy.yaml
    with:
      environment: dev
      image_tag: ${{ vars.VERSION }}-l1vh.${{ github.run_number }}
    secrets: inherit
    needs: [Build_Push_Images]

  test-kvm:
    uses: ./.github/workflows/deploy.yaml
    with:
      environment: test-kvm
      image_tag: ${{ vars.VERSION }}-l1vh.${{ github.run_number }}
    secrets: inherit
    # needs: [Build_Push_Images]
    needs: [dev]

  test-emulation:
    uses: ./.github/workflows/deploy.yaml
    with:
      environment: test-emulation
      image_tag: ${{ vars.VERSION }}-l1vh.${{ github.run_number }}
    secrets: inherit
    # needs: [Build_Push_Images]
    needs: [dev]

  test-mshv:
    uses: ./.github/workflows/deploy.yaml
    with:
      environment: test-mshv
      image_tag: ${{ vars.VERSION }}-l1vh.${{ github.run_number }}
    secrets: inherit
    # needs: [Build_Push_Images]
    needs: [dev]