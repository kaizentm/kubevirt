name: CICD Pipeline

on:
  push:
    branches: ["ise","eugene/*"]
  workflow_dispatch:

env:
  DOCKER_PREFIX: ghcr.io/${{ github.repository }}
  DOCKER_TAG: ${{ vars.VERSION }}-l1vh.${{ github.run_number }}

  
jobs:
  # quality-check:
  #   uses: ./.github/workflows/pr.yaml
    
  Build_Push_Images:
    runs-on: ubuntu-latest
    # needs: [quality-check]
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to GHCR
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


      # - name: Build Images
      #   run: |
      #     pwd
      #     make bazel-build-images


      # - name: Push Images
      #   run: |
      #     make bazel-push-images
  
  deploy-to-dev:
    uses: ./.github/workflows/deploy.yaml
    with:
      environment: dev
      image_tag: ${{ vars.VERSION }}-l1vh.${{ github.run_number }}
    secrets: inherit
    needs: [Build_Push_Images]


  # Deploy_to_Dev:
  #   runs-on: ubuntu-latest
  #   needs: [Build_Push_Images]
  #   environment: dev
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Generate Manifests with configured Feature Gates
  #       run: |          
  #         make manifests
  #       env: 
  #         FEATURE_GATES: ${{ vars.FEATURE_GATES }}  
      
  #     - name: Upload Manifests
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: dev-manifests
  #         path: ${{ github.workspace }}/_out/manifests

  #     # TODO: implement deploy and test steps
  #     - name: Deploy to Dev Cluster
  #       run: |
  #         echo "Deploying to Dev cluster..."

  #     - name: Run tests on Dev Cluster
  #       run: |
  #         echo "Running tests on Dev cluster..."


  # Deploy_to_Ephemeral:
  #   runs-on: self-hosted
  #   needs: [Build_Push_Images]
  #   environment: ephemeral
  #   permissions: write-all
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Start Ephemeral Environment
  #       run: |
  #         make cluster-down || make cluster-up

  #     - name: Deploy To Ephemeral Environment
  #       run: |
  #         make cluster-deploy
  #       env: 
  #         FEATURE_GATES: ${{ vars.FEATURE_GATES }}  

  #     - name: Run Conformance Tests
  #       run: |
  #         make conformance
